* 070425: Removed osgSensor::Event in favour for the new OpenThreads::Block class that does the same thing. Update to reflect svn version of OpenSceneGraph.
  Naming of OpenThreadWin32.lib -> OpenThreads.lib

 *070214 (Happy Valentine!), Anders Backman, Sophia Soo, Jerome Schmid, Johannes Philippi
  Added support for two devices. 

* 061001, Anders Backman:
  Updated all rendering code to reflect changes in osg.

* 060829, Anders Backman:
  Changed constructor of HapticGroup to take a osgUtil::SceneView instead of a osgProducer::Viewer.

* 060829, Anders Backman:
  Changed constructor of HapticGroup to take a osgUtil::SceneView instead of a osgProducer::Viewer.
  
* 060515, Anders Backman:
 - Added material_demo, forceoperator_demo
 - Added consistent BBOX updates in all demos
 - Added pointer checks in HapticSpringNode

* 060515, Anders Backman
 - osgHapticViewer: 
  Added command-line options: 
  
  --proxy_scale <float>  - Scale the size of the model used as a visual proxy
  --constraint <float>   - Set the surface to be a constraint surface with snap_force specified
  --dynamic_friction <float> - Set the dynamic friction of the haptic surface 
  --static_friction <float> - Set the static friction of the haptic surface
  --damping <float> - Set the damping in the friction equation (spring)
  --stiffness <float> - Set the stiffness in the friction equation (spring)

*060519, Anders Backman
  - osgHapticViewer
  
  Added command-line option:
  --remove_instances - Will do a deep copy of the loaded scene which will then be used as the haptic subgraph.
    This will effectively remove any instances that can cause problem with haptic rendering.

* 060602, Anders Backman

 - osgHapticViewer: 
 
  Added a simple Hash test for large meshes, including arguments for osgHapticViewer:
 
  --hash              - Hash the loaded model for intersection test
  --cell-size         - Size of the hash cell
  --render-triangles  - Render the triangles that are intersected with the proxy

  The hash test is an example of how to store triangles in a hash datastructure and to 
  only haptically render the triangles in proximity to the Haptic proxy.
  It has been tested with models with 300.000 triangles.
  Without hash I get: 
 
  Renamed arguments, using - instead of _
  
  --proxy-scale <float>  - Scale the size of the model used as a visual proxy
  --constraint <float>   - Set the surface to be a constraint surface with snap_force specified
  --dynamic-friction <float> - Set the dynamic friction of the haptic surface 
  --static-friction <float> - Set the static friction of the haptic surface
  --damping <float> - Set the damping in the friction equation (spring)
  --stiffness <float> - Set the stiffness in the friction equation (spring)
  --remove-instances
  
* 060607, Anders Backman
  - osgHaptics:
    - Using the inverse of the WorkspaceMatrix for VIEW_WORKSPACE
  
  - osgHapticViewer:
  
  Added arguments:
  
  --bbox-volume - Set the haptic volume to fit the specified bounding box, default is to fit the current view volume
  --workspace-scale <float> - Uniform scale of the haptic workspace volume. 2 makes the volume twice as large.
   